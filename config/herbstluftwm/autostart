#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload
hc keyunbind --all
xsetroot -solid '#18181B'

# Colors
bg=$(xrdb -query | grep '*.background' | cut -f2- -d'#')
fg=$(xrdb -query | grep '*.foreground' | cut -f2- -d'#')
gray=$(xrdb -query | grep color0 | cut -f2- -d'#')
light_gray=$(xrdb -query | grep color8 | cut -f2- -d'#')
red=$(xrdb -query | grep color1 | cut -f2- -d'#')
green=$(xrdb -query | grep color2 | cut -f2- -d'#')
yellow=$(xrdb -query | grep color3 | cut -f2- -d'#')
blue=$(xrdb -query | grep color4 | cut -f2- -d'#')
magenta=$(xrdb -query | grep color5 | cut -f2- -d'#')
cyan=$(xrdb -query | grep color6 | cut -f2- -d'#')
white=$(xrdb -query | grep color7 | cut -f2- -d'#')

### Keybindings ###
Mod=Mod4

# Core
hc keybind $Mod-Shift-q spawn bash ~/.nixos-config/config/scripts/logout
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Shift-Return spawn "${TERMINAL:-alacritty}"

# Prompts
hc keybind $Mod-p spawn dmenu_run -i -p "Run:" -fn "Iosevka" -nb "#${bg}" -nf "#${fg}" -sf "#${bg}" -sb "#${fg}"
hc keybind $Mod-Control-p spawn bash ~/.nixos-config/config/scripts/hub
hc keybind $Mod-Control-q spawn bash ~/.nixos-config/config/scripts/kill
hc keybind $Mod-Control-r spawn bash ~/.nixos-config/config/scripts/confedit
hc keybind $Mod-Control-grave spawn bash ~/.nixos-config/config/scripts/password

# Herbst prompts
hc keybind $Mod-semicolon spawn bash ~/.nixos-config/config/herbstluftwm/herbstutils/herbstutils
hc keybind $Mod-Shift-semicolon spawn bash ~/.nixos-config/config/herbstluftwm/scripts/herbstcommander
hc keybind $Mod-apostrophe spawn bash ~/.nixos-config/config/herbstluftwm/scripts/bringwselect
hc keybind $Mod-Shift-apostrophe spawn bash ~/.nixos-config/config/herbstluftwm/scripts/wselect

# Movement
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# Splitting frames
hc keybind $Mod-Shift-s  chain , cycle_layout +1 horizontal vertical , split bottom  0.5 , focus -e down
hc keybind $Mod-Shift-v  chain , split right   0.5 , focus -e right
hc keybind $Mod-Control-s  chain , split top  0.5 , focus -e up
hc keybind $Mod-Control-v  chain , split left   0.5 , focus -e left

# split but no focus
hc keybind $Mod-s       split   bottom  0.5
hc keybind $Mod-v       split   right   0.5

# split by half from the longest side
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# Tags
tag_names=("Highway" "Communication" "Development" "System" "Media" "Other")
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# Monitors
# cycle through monitors
hc keybind $Mod-w   focus_monitor 0
hc keybind $Mod-e   focus_monitor 1
hc keybind $Mod-Shift-w   shift_to_monitor 0
hc keybind $Mod-Shift-e   shift_to_monitor 1

# Layouting
hc keybind $Mod-Shift-x remove
hc keybind $Mod-r rotate
hc keybind $Mod-t set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-t floating toggle
hc keybind $Mod-Control-t pseudotile toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-m cycle_layout +1 max vertical
hc keybind $Mod-g set_layout grid

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                               \
            or , and . compare tags.focus.curframe_wcount = 2       \
                     . cycle_layout +1 max vertical horizontal grid \
               , cycle_layout +1

# Mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# Additional focus commands
hc keybind Mod1-Tab cycle_all +1
hc keybind Mod1-Shift-Tab cycle_all -1
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-n cycle
hc keybind $Mod-Shift-n cycle -1
hc keybind $Mod-u jumpto urgent

# Applications
hc keybind $Mod-Mod1-e spawn emacsclient -a '' -c
hc keybind $Mod-Mod1-b spawn qutebrowser
hc keybind $Mod-Mod1-f spawn alacritty -e nnn
hc keybind $Mod-Mod1-t spawn alacritty --title "terrm"
hc keybind $Mod-Mod1-v spawn alacritty --title "mixerr" -e pulsemixer
hc keybind $Mod-Mod1-m spawn alacritty --title "monitorr" -e htop

# Audio
hc keybind XF86AudioRaiseVolume spawn amixer -q set Master 5%+ unmute
hc keybind XF86AudioLowerVolume spawn amixer -q set Master 5%- unmute
hc keybind XF86AudioMute spawn amixer -q set Master toggle

# Notifications
hc keybind Control-Shift-backslash spawn dunstctl set-paused toggle

# Screenshot
hc keybind $Mod-Insert spawn flameshot screen -p ~/Pictures/Screenshots
hc keybind $Mod-Shift-Insert spawn flameshot gui

# Display
hc keybind $Mod-Control-equal spawn autorandr -cf
hc keybind XF86MonBrightnessUp spawn xbacklight -inc 10
hc keybind XF86MonBrightnessDown spawn xbacklight -dec 10

### Settings ###
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc set frame_gap 5
hc set frame_padding -3 # Gapp between windows and frames
hc set window_gap -2
hc set snap_distance 0
hc set snap_gap 0

hc set always_show_frame on
hc set default_frame_layout max
hc set hide_covered_windows off
hc set gapless_grid off

hc set smart_frame_surroundings on
hc set smart_window_surroundings on

hc set focus_follows_mouse 1
hc set mouse_recenter_gap 0
# don't swap monitors content, change the focused monitor instead
hc set auto_detect_monitors on

### Theme ###

hc set frame_border_active_color "#$light_gray"
hc set frame_border_normal_color "#$gray"
hc set frame_border_width 3
hc set frame_border_inner_width 0
hc set frame_bg_active_color "#18181B00" #Fill of focused frame
hc set frame_bg_normal_color "#18181Baa" #Fill of unfocused frame (needs always show frame)
hc set frame_bg_transparent on
hc set frame_transparent_width 0

hc attr theme.active.color "#$light_gray"
hc attr theme.normal.color "#$gray"
hc attr theme.urgent.color "#$red"
hc attr theme.border_width 2
hc attr theme.title_height 0

# tiling windows
for state in active urgent normal ; do
    hc substitute C theme.tiling.${state}.inner_color \
        attr theme.tiling.${state}.outer_color C
done

# floating windows
hc attr theme.floating.border_width 12
hc attr theme.floating.inner_width 2
hc attr theme.floating.outer_width 10
hc attr theme.floating.active.inner_color "#$light_gray"
hc attr theme.floating.normal.inner_color "#$gray"
hc attr theme.floating.outer_color "#$bg"

### Rules ###
hc unrule -F

hc rule focus=on # normally focus new clients
hc rule floatplacement=center

hc rule class=Signal tag=Communication
hc rule class=Thunderbird tag=Communication
hc rule class=discord tag=Communication
hc rule class="Firefox Developer Edition" tag=Media
hc rule class=Spotify tag=Media
hc rule class=mpv tag=Media
hc rule class=Sxiv floating=on

# Floaters
hc rule title=terrm floating=on floatplacement=center focus=on floating_geometry=600x450 hook=always_focus
hc rule title=mixerr floating=on floatplacement=center focus=on floating_geometry=750x250 hook=always_focus
hc rule title=monitorr floating=on floatplacement=center focus=on floating_geometry=900x650 hook=always_focus


hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# wmname spoof
wmname LG3D

### Autostart ###
hc detect_monitors
hc spawn autorandr --change
xsetroot -cursor_name left_ptr
xargs xwallpaper --stretch < ~/.cache/wall
hc spawn bash "$HOME/.nixos-config/config/polybar/launch.sh"

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
