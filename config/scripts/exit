#!/usr/bin/env bash

set -euo pipefail
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
source "$SCRIPT_DIR/config"

# use notify-send if run in dumb term
# TODO: add abillity to control from config.
_out="echo"
if [[ ${TERM} == 'dumb' ]]; then
    _out="dunstify"
fi

output(){
    ${_out} "logout" "$@"
}

main() {
    # An array of options to choose.
    declare -a options=(
    "lock"
    "logout"
    "reboot"
    "poweroff"
    "suspend"
    )

    # Piping the above array into dmenu.
    # We use "printf '%s\n'" to format the array one item to a line.
    choice=$(printf '%s\n' "${options[@]}" | ${DMENU} -i -l 6 -p 'Shutdown menu:' "${@}")

    # What to do when/if we choose one of the options.
    case $choice in
        'logout')
            # pkill -u $USER
            # herbstclient quit
            swaymsg exit
            ;;
        'lock')
            # shellcheck disable=SC2154
            swaylock -f -c 000000
            # XSECURELOCK_FONT='Iosevka Nerd Font Mono' XSECURELOCK_AUTH_BACKGROUND_COLOR='#000000' XSECURELOCK_AUTH_FOREGROUND_COLOR='#ffffff' xsecurelock
            ;;
        'reboot')
            systemctl reboot
            ;;
        'poweroff')
            systemctl poweroff
            ;;
        'suspend')
            systemctl suspend
            ;;
        # It is a common practice to use the wildcard asterisk symbol (*) as a final
        # pattern to define the default case. This pattern will always match.
        *)
            exit 0
            ;;
    esac

}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
