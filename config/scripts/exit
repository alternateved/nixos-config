#!/usr/bin/env bash

set -euo pipefail
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
source "$SCRIPT_DIR/config"

# use notify-send if run in dumb term
# TODO: add abillity to control from config.
_out="echo"
if [[ ${TERM} == 'dumb' ]]; then
    _out="dunstify"
fi

output(){
    ${_out} "logout" "$@"
}

main() {
    # An array of options to choose.
    declare -a options=(
    "  lock"
    " logout"
    "  reboot"
    "  poweroff"
    "  hibernate"
    "⏾  suspend"
    )

    # Piping the above array into dmenu.
    # We use "printf '%s\n'" to format the array one item to a line.
    choice=$(printf '%s\n' "${options[@]}" | ${DMENU} -i -l 6 -p 'Shutdown menu' "${@}")

    # What to do when/if we choose one of the options.
    case $choice in
        ' logout')
            if [[ "$(echo -e "No\nYes" | ${DMENU} -i -p "${choice}" "${@}" )" == "Yes" ]]; then
                pkill -u $USER
                # herbstclient quit
            else
                output "User chose not to logout." && exit 1
            fi
            ;;
        '  lock')
            # shellcheck disable=SC2154
            XSECURELOCK_FONT='Iosevka Nerd Font Mono' XSECURELOCK_AUTH_BACKGROUND_COLOR='#18181B' XSECURELOCK_AUTH_FOREGROUND_COLOR='#E4E4E8' xsecurelock
            ;;
        '  reboot')
            if [[ "$(echo -e "No\nYes" | ${DMENU} -i -p "${choice}" "${@}" )" == "Yes" ]]; then
                systemctl reboot
            else
                output "User chose not to reboot." && exit 0
            fi
            ;;
        '  poweroff')
            if [[ "$(echo -e "No\nYes" | ${DMENU} -i -p "${choice}" "${@}" )" == "Yes" ]]; then
                systemctl poweroff
            else
                output "User chose not to shutdown." && exit 0
            fi
            ;;
        '  hibernate')
            if [[ "$(echo -e "No\nYes" | ${DMENU} -i -p "${choice}" "${@}" )" == "Yes" ]]; then
                systemctl hibernate
            else
                output "User chose not to hibernate." && exit 0
            fi
            ;;
        '⏾  suspend')
            if [[ "$(echo -e "No\nYes" | ${DMENU} -i -p "${choice}" "${@}" )" == "Yes" ]]; then
                systemctl suspend
            else
                output "User chose not to suspend." && exit 0
            fi
        ;;
        # It is a common practice to use the wildcard asterisk symbol (*) as a final
        # pattern to define the default case. This pattern will always match.
        *)
            exit 0
        ;;
    esac

}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
